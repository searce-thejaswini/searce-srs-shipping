name: CI Workflow
on:
  push:
    branches-ignore:
      - dev-branch-01
    paths-ignore:
      - 'DCOS/**'
      - 'K8s/**'
  pull_request:
       
  workflow_dispatch:
    paths-ignore:
      - 'DCOS/**'
      - 'K8s/**'

env:
  GAR_INFO: us-central1-docker.pkg.dev/srs-cart-demo/srs-ship-demo
  APP_NAME: rs-shipping
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_NEW }}
  SONAR_PROJECT_KEY: 'coe-srs-shipping'
 
  
jobs:  
  build-shipping:
    name: Building SHIPPING IMAGE
    runs-on: ubuntu-latest
    permissions:
     actions: write
     checks: write
     contents: write
     deployments: write
     id-token: write
     issues: write
     discussions: write
     packages: write
     pages: write
     pull-requests: write
     repository-projects: write
     security-events: write
     statuses: write
      

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: Maven
     
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
                       
      - name: Setup GCP Service Account
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS_P }}"
          # Below is a method of using Managed Identity Pools in GCP"
          #workload_identity_provider: "${{ secrets.workload_identity_provider }}"
          #service_account: 'triangulum-ctv-sa@triangulum-ctv-349103.iam.gserviceaccount.com'
          #project_id: triangulum-ctv
          #token_format: 'access_token'
      
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v0'
      
      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Setup Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
      
       
      - name: Build-and-push-to-GAR
        run: |
          echo `pwd`
          export TAG=`cat VERSION.txt`
          echo $TAG
          echo "$GAR_INFO"/"$APP_NAME":"$TAG"
          docker build -t "$GAR_INFO"/"$APP_NAME":"$TAG" .
          gcloud info
          docker push "$GAR_INFO"/"$APP_NAME":"$TAG"
          #gcloud builds submit --tag "$GAR_INFO"/"$APP_NAME":"$TAG" .
  
